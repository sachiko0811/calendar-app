{"version":3,"sources":["components/Schedule/index.js","services/calendar.js","components/CalendarElements/index.jsx","components/CalendarBoard/presentation.jsx","redux/addSchedule/actions.js","redux/currentSchedule/actions.js","services/schedule.js","redux/schedules/actions.js","services/api.js","redux/schedules/effects.js","components/CalendarBoard/container.jsx","redux/calendar/actions.js","redux/calendar/reducer.js","redux/addSchedule/reducer.js","redux/schedules/reducer.js","redux/currentSchedule/reducer.js","redux/rootReducer.js","images/calendar_icon.png","components/Navigation/presentation.jsx","components/Navigation/container.jsx","components/AddScheduleDialog/presentation.jsx","components/AddScheduleDialog/container.jsx","components/CurrentScheduleDialog/presentation.jsx","components/CurrentScheduleDialog/container.jsx","index.jsx"],"names":["Schedule","schedule","onClickSchedule","className","onClick","e","title","getMonth","year","month","dayjs","isSameDay","d1","d2","format","getMonthStateCreator","diff","day","add","formatMonth","getNextMonth","getPreviousMonth","CalendarElement","schedules","props","today","textColor","m1","m2","isSameMonth","date","isFirstDay","isToday","Typography","color","align","variant","component","map","id","days","CalendarBoard","calendar","openAddScheduleDialog","openCurrentScheduleDialog","fetchSchedule","useEffect","GridList","cols","spacing","cellHeight","d","toISOString","ADD_SCHEDULE_SET_VALUE","ADD_SCHEDULE_OPEN_DIALOG","ADD_SCHEDULE_CLOSE_DIALOG","ADD_SCHEDULE_START_EDIT","addScheduleSetValue","payload","type","addScheduleCloseDialog","CURRENT_SCHEDULE_SET_ITEM","CURRENT_SCHEDULE_OPEN_DIALOG","CURRENT_SCHEDULE_CLOSE_DIALOG","currentScheduleCloseDialog","formatSchedule","isScheduleEmpty","description","location","SCHEDULES_ADD_ITEM","SCHEDULES_FETCH_ITEM","SCHEDULES_SET_LOADING","SCHEDULES_DELETE_ITEM","SCHEDULES_ASYNC_FAILURE","SCHEDULES_RESET_ERROR","schedulesSetLoading","schedulesAsyncFailure","error","url","path","header","headers","get","a","localStorage","getItem","resp","json","result","post","body","options","method","JSON","stringify","setItem","checkError","status","deleteRequest","Error","asyncSchedulesFetchItem","dispatch","formatedSchedule","r","message","connect","state","stopPropagation","stateProps","dispatchProps","items","c","filter","setSchedules","firstDay","firstDayIndex","Array","fill","_","i","diffFromFirstDay","createCalendar","CALENDAR_SET_MONTH","init","calendarReducer","action","form","isDialogOpen","isStartEdit","addScheduleReducer","isLoading","scheduleReducer","item","currentScheduleReducer","rootReducer","combineReducers","addSchedule","currentSchedule","StyledToolbar","withStyles","root","margin","Toolbar","StyledTypography","StyledDatePicker","marginLeft","DatePicker","Navigation","setNextMonth","setPreviousMonth","setMonth","IconButton","src","logo","width","height","Tooltip","placement","size","value","onChange","animateYearScrolling","disableToolbar","fetchItem","nextMonth","previousMonth","dayObj","spacer","Title","fontSize","Input","AddScheduleDialog","closeDialog","setSchedule","saveSchedule","setIsEditStart","isTitleInvalid","Dialog","open","onClose","maxWidth","fullWidth","DialogActions","Close","DialogContent","autoFocus","placeholder","target","onBlur","Grid","container","alignItems","justify","AccessTime","xs","style","LocationOnOutlined","TextField","NotesOutlined","Button","disabled","newSchedule","console","log","asyncSchedulesAddItem","window","confirm","isCloseDialog","top","bottom","CurrentScheduleDialog","deleteItem","DeleteOutlineOutlined","getState","currentSchedules","newSchedules","s","asyncSchedulesDeleteItem","locale","store","createStore","applyMiddleware","thunk","App","utils","DayjsUtils","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bf2ee6d.chunk.js","sourcesContent":["import React from \"react\";\n\n// import * as styles from './style.css';\nimport \"./style.css\";\n\nconst Schedule = ({ schedule, onClickSchedule }) => {\n    return (\n    <div \n    // className={styles.schedule}\n    className=\"schedule\"\n    onClick={e => onClickSchedule(schedule, e)}\n    >\n        {schedule.title}\n    </div>\n    )\n};\n\nexport default Schedule;","import dayjs from \"dayjs\";\n\nexport const createCalendar = month => {\n    // adding first day of this month\n    const firstDay = getMonth(month);\n    // const firstDay = dayjs().startOf(\"month\");\n\n    // getting days of week of the first day index\n    const firstDayIndex = firstDay.day();\n    // const firstDayIndex = firstDay.day();\n\n    return Array(35)\n    .fill(0) // If I don't put this, then there's nothing in the array so I can't see anything on the browser\n    .map((_, i) => {\n        const diffFromFirstDay = i - firstDayIndex;\n        const day = firstDay.add(diffFromFirstDay, \"day\");\n        // console.log(day);\n        return day;\n    });\n}\n\nexport const getMonth = ({ year, month }) => {\n    return dayjs(`${year}-${month}`);\n}\n\nexport const isSameDay = (d1, d2) => {\n    const format = \"YYYYMMDD\";\n    return d1.format(format) === d2.format(format);\n}\n\nexport const isSameMonth = (m1, m2) => {\n    const format = \"YYYYMM\";\n    return m1.format(format) === m2.format(format);\n}\n\n// format of string\nexport const isFirstDay = day => day.date() === 1;\n\nexport const getMonthStateCreator = diff => month => {\n    const day = getMonth(month).add(diff, \"month\");\n    return formatMonth(day);\n}\n\nexport const getNextMonth = getMonthStateCreator(1);\nexport const getPreviousMonth = getMonthStateCreator(-1);\n\nexport const formatMonth = day => ({\n    month: day.month() + 1,\n    year: day.year()\n});","import React from \"react\";\n\n// import * as styles from \"./style.css\";\nimport './style.css';\n\nimport Schedule from '../Schedule';\n\nimport { Typography } from \"@material-ui/core\";\nimport { isSameDay, isSameMonth, isFirstDay, getMonth } from \"../../services/calendar\";\n\nimport  dayjs from \"dayjs\";\n\nconst CalendarElement = ({ day, month, schedules, ...props }) => {\n\n    \n    // const isFirstDay = day.date() === 1;\n    \n\n    // Today\n    const today = dayjs();\n    // const compareFormat = \"YYYYMMDD\";\n    // const isToday = day.format(compareFormat) === today.format(compareFormat);\n\n    // greydown for the other months\n    // const isCurrentMonth = day.month() === today.month();\n    const currentMonth = getMonth(month);\n    const isCurrentMonth = isSameMonth(day, currentMonth);\n    const textColor = isCurrentMonth ? \"textPrimary\" : \"textSecondary\";\n\n    // setting the month info for the first day of the month\n    const format = isFirstDay(day) ? \"MMM DD\" : \"DD\";\n\n    // today or not\n    const isToday = isSameDay(day, today);\n\n    return(\n        <div \n        // className={styles.element}\n        className=\"element\"\n        >\n            <Typography \n            // className={styles.date}\n            className=\"date\"\n            color={textColor}\n            align=\"center\"\n            variant=\"caption\"\n            component=\"div\"\n            >\n                <span className={isToday ? \"today\" : \"\"}>\n                    {day.format(format)}\n                </span>\n            </Typography>\n            <div \n            // className={styles.schedules}\n            className=\"schedules\"\n            >\n                {schedules.map(e =>  (\n                    <Schedule key={e.id} schedule={e} {...props} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default CalendarElement;","import React, { useEffect } from 'react';\nimport { GridList, Typography } from \"@material-ui/core\";\n// import { Typography } from \"@material-ui/core\";\n\nimport CalendarElement from \"../CalendarElements\";\n// import { createCalendar } from \"../../services/calendar\";\n\n// import dayjs from \"dayjs\";\n// import \"dayjs/locale/ja\";\n// dayjs.locale(\"ja\");\n\n// import * as styles from \"./style.css\";\n// import styles from \"./style.css\";\nimport './style.css';\n\n// const calendar = createCalendar();\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst CalendarBoard = ({ \n    calendar, \n    month, \n    openAddScheduleDialog,\n    openCurrentScheduleDialog,\n    fetchSchedule\n    // schedules\n }) => {\n     useEffect(() => {\n         fetchSchedule();\n     }, []);\n    // console.log(calendar);\n    // console.log(schedules);\n    return (\n        <div \n        // className={styles.container}\n        className=\"container\"\n        >\n            <GridList \n            // className={styles.grid}\n            // style={{borderLeft: \"1px solid #ccc\", color: \"red\"}}\n            className=\"grid\"\n            cols={7}\n            spacing={0}\n            cellHeight=\"auto\"\n            >\n                {days.map(d => (\n                    <li key={d}>\n                        <Typography\n                        // className={styles.days}\n                        className=\"days\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                        variant=\"caption\"\n                        component=\"div\"\n                        >\n                            {d}\n                        </Typography>\n                    </li>\n                ))}\n                {calendar.map(({ date, schedules }) => (\n                    <li \n                    key={date.toISOString()}\n                    onClick={() => openAddScheduleDialog(date)}\n                    >\n                        <CalendarElement \n                        day={date}\n                        month={month}\n                        schedules={schedules}\n                        onClickSchedule={openCurrentScheduleDialog}\n                        />\n\n                        {/* <Typography\n                        className={styles.days}\n                        color=\"textSecondary\"\n                        align=\"center\"\n                        variant=\"caption\"\n                        component=\"div\"\n                        >\n                        {d}\n                        </Typography> */}\n                    </li>\n                ))}\n                {/* {calendar.map(c => (\n                    <li key={c.toISOString()} onClick={() => openAddScheduleDialog(c)}>\n                        <CalendarElement day={c} month={month} />\n                    </li>\n                ))} */}\n            {/* {calendar.map(c => (\n                <li>{c}</li>\n            ))} */}\n            </GridList>\n        </div>\n    )\n}\n\n\nexport default CalendarBoard;","// constants\nexport const ADD_SCHEDULE_SET_VALUE = \"ADD_SCHEDULE_SET_VALUE\";\nexport const ADD_SCHEDULE_OPEN_DIALOG = \"ADD_SCHEDULE_OPEN_DIALOG\";\nexport const ADD_SCHEDULE_CLOSE_DIALOG = \"ADD_SCHEDULE_CLOSE_DIALOG\";\nexport const ADD_SCHEDULE_START_EDIT = \"ADD_SCHEDULE_START_EDIT\";\n\n// actions\nexport const addScheduleSetValue = payload => ({\n    type: ADD_SCHEDULE_SET_VALUE,\n    payload\n});\n\nexport const addScheduleOpenDialog = () => ({\n    type: ADD_SCHEDULE_OPEN_DIALOG\n});\n\nexport const addScheduleCloseDialog = () => ({\n    type: ADD_SCHEDULE_CLOSE_DIALOG\n});\n\nexport const addScheduleStartEdit = () => ({\n    type: ADD_SCHEDULE_START_EDIT\n});","// constants\nexport const CURRENT_SCHEDULE_SET_ITEM = \"CURRENT_SCHEDULE_SET_ITEM\";\nexport const CURRENT_SCHEDULE_OPEN_DIALOG = \"CURRENT_SCHEDULE_OPEN_DIALOG\";\nexport const CURRENT_SCHEDULE_CLOSE_DIALOG = \"CURRENT_SCHEDULE_CLOSE_DIALOG\";\n\n// actions\nexport const currentScheduleSetItem = payload => ({\n    type: CURRENT_SCHEDULE_SET_ITEM,\n    payload\n});\n\nexport const currentScheduleOpenDialog = () => ({\n    type: CURRENT_SCHEDULE_OPEN_DIALOG\n});\n\nexport const currentScheduleCloseDialog = () => ({\n    type: CURRENT_SCHEDULE_CLOSE_DIALOG\n});","import { isSameDay } from \"./calendar\";\nimport dayjs from 'dayjs';\n\nexport const setSchedules = (calendar, schedules) => \n    calendar.map(c => ({\n        date: c,\n        schedules: schedules.filter(e => isSameDay(e.date, c))\n    }));\n\nexport const formatSchedule = schedule => ({\n\n    ...schedule,\n    date: dayjs(schedule.date)\n});\n\nexport const isCloseDialog = schedule => {\n    const message = \"Do you want to discard before saving?\";\n\n    return isScheduleEmpty(schedule) || window.confirm(message);\n}\n\nconst isScheduleEmpty = schedule =>\n    !schedule.title && !schedule.description && !schedule.location;","// constants\nexport const SCHEDULES_ADD_ITEM = \"SCHEDULES_ADD_ITEM\";\nexport const SCHEDULES_FETCH_ITEM = \"SCHEDULES_FETCH_ITEM\";\nexport const SCHEDULES_SET_LOADING  =\"SCHEDULES_SET_LOADING\";\nexport const SCHEDULES_DELETE_ITEM = \"SCHEDULES_DELETE_ITEM\";\nexport const SCHEDULES_ASYNC_FAILURE = \"SCHEDULES_ASYNC_FAILURE\";\nexport const SCHEDULES_RESET_ERROR = \"SCHEDULES_RESET_ERROR\";\n\n\n//  actions\nexport const schedulesAddItem = payload => ({\n    type: SCHEDULES_ADD_ITEM,\n    payload\n});\n\nexport const schedulesFetchItem = payload => ({\n    type: SCHEDULES_FETCH_ITEM,\n    payload\n});\n\nexport const schedulesSetLoading = () => ({\n    type: SCHEDULES_SET_LOADING\n});\n\nexport const schedulesDeleteItem = payload => ({\n    type: SCHEDULES_DELETE_ITEM,\n    payload\n});\n\nexport const schedulesAsyncFailure = error => ({\n    type: SCHEDULES_ASYNC_FAILURE,\n    error\n});\n\nexport const schedulesResetError = () => ({\n    type: SCHEDULES_RESET_ERROR\n});","const host = \"http://localhost:3000/api\";\nconst url = path => `${host}/${path}`;\n\nconst header = {\n    headers: {\n        \"Content-type\" : \"application/json\"\n    }\n}\n\nexport const get = async path => {\n    // const resp = await fetch(url(path));\n    // checkError(resp.status);\n    // const result = await resp.json();\n    const resp = await localStorage.getItem(url(path))\n    const result = await resp.json();\n    return result;\n}\n\nexport const post = async (path, body) => {\n    const options = {...header, method: \"POST\", body: JSON.stringify(body) };\n\n    // const resp = await fetch(url(path), options);\n    const resp = await localStorage.setItem(url(path), options);\n    checkError(resp.status);\n    const result = await resp.json();\n\n    return result;\n}\n\n\nexport const deleteRequest = async path => {\n    const options = { method: \"DELETE\" };\n\n    // const resp = await fetch(url(path), options);\n    const resp = await localStorage(url(path), options);\n    checkError(resp.status);\n\n    // 204 No Content is gonna return so if it works successfully then return nothing\n    return;\n};\n\nconst checkError = status => {\n    // over 400 case -> just show \"error\"\n    if(status >= 400) {\n        throw new Error('There are errors. Please try it again later.');\n    }\n};","import { \n    schedulesSetLoading, \n    schedulesFetchItem, \n    schedulesAddItem, \n    schedulesDeleteItem,\n    schedulesAsyncFailure\n } from \"./actions\";\nimport { get, post, deleteRequest } from \"../../services/api\";\nimport { formatSchedule } from \"../../services/schedule\";\n\nexport const asyncSchedulesFetchItem = ({ month, year }) => async dispatch => {\n    (schedulesSetLoading());\n\n\n    try {\n        const result = await get(`schedules`);\n        // const result = await get(`schedules?month=${month}&year=${year}`);\n        const formatedSchedule = result.map(r => formatSchedule(r));\n\n        dispatch(schedulesFetchItem(formatedSchedule));\n    } catch(err) {\n        // console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n}\n\nexport const asyncSchedulesAddItem = schedule => async dispatch => {\n    // doing loading: true\n    dispatch(schedulesSetLoading());\n\n    // possible to catch the async error\n    try{\n        const body = { ...schedule, date: schedule.date.toISOString() };\n        const result = await post(\"schedules\", body);\n\n        const newSchedule = formatSchedule(result);\n        dispatch(schedulesAddItem(newSchedule));\n    } catch (err) {\n        console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n};\n\nexport const asyncSchedulesDeleteItem = id => async (dispatch, getState) => {\n    dispatch(schedulesSetLoading());\n    const currentSchedules = getState().schedules.items;\n\n    try {\n        await deleteRequest(`schedules/${id}`);\n\n        // if it works perfectly, then delete  the local state\n        const newSchedules = currentSchedules.filter(s => s.id !== id);\n        dispatch(schedulesDeleteItem(newSchedules));\n\n    } catch (err) {\n        console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n}","import { connect } from \"react-redux\";\nimport CalendarBoard from \"./presentation\";\nimport { createCalendar } from \"../../services/calendar\";\n\nimport { \n    addScheduleOpenDialog,\n    addScheduleSetValue\n } from '../../redux/addSchedule/actions';\n\n import {\n     currentScheduleSetItem,\n     currentScheduleOpenDialog\n } from \"../../redux/currentSchedule/actions\";\n\nimport { setSchedules } from \"../../services/schedule\";\n\nimport { asyncSchedulesFetchItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ \n    calendar: state.calendar, \n    schedules: state.schedules\n});\n\nconst mapDispatchToProps = dispatch => ({\n    openAddScheduleDialog: d => {\n        dispatch(addScheduleOpenDialog());\n        dispatch(addScheduleSetValue({ date: d }));\n    },\n\n    openCurrentScheduleDialog: (schedule, e) => {\n        // stop the other event to start\n        e.stopPropagation();\n\n        dispatch(currentScheduleSetItem(schedule));\n        dispatch(currentScheduleOpenDialog());\n    },\n\n    fetchSchedule: month => {\n        dispatch(asyncSchedulesFetchItem(month));\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps) => {\n    const {\n        calendar: month,\n        schedules: { items: schedules }\n    } = stateProps;\n\n    const calendar = setSchedules(createCalendar(month), schedules);\n\n    return {\n        ...stateProps,\n        ...dispatchProps,\n        fetchSchedule: () => dispatchProps.fetchSchedule(month),\n        calendar,\n        month\n    }\n};\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps, \n    mergeProps\n    )(CalendarBoard);","// constants\nexport const CALENDAR_SET_MONTH = \"CALENDAR_SET_MONTH\";\n\n// actions\nexport const calendarSetMonth = payload => ({\n    type: CALENDAR_SET_MONTH,\n    payload\n});","import dayjs from \"dayjs\";\n\nimport { CALENDAR_SET_MONTH } from \"./actions\";\n\nimport { formatMonth } from '../../services/calendar';\n\nconst day = dayjs();\n\nconst init = formatMonth(day);\n\n// const init = {\n//     year: day.year(),\n//     month: day.month() + 1\n// }\n\nconst calendarReducer = (state = init, action) => {\n    const { type, payload } = action;\n    switch(type) {\n        case CALENDAR_SET_MONTH:\n            return payload;\n            default:\n                return state;\n    }\n}\n\nexport default calendarReducer;","import {\n    ADD_SCHEDULE_SET_VALUE,\n    ADD_SCHEDULE_OPEN_DIALOG,\n    ADD_SCHEDULE_CLOSE_DIALOG,\n    ADD_SCHEDULE_START_EDIT\n} from \"./actions\";\n\nimport dayjs from \"dayjs\";\n\nconst init = {\n    form: {\n        title: \"\",\n        description: \"\",\n        date: null,\n        // date: dayjs(),\n        location: \"\"\n    },\n    isDialogOpen:  false,\n    isStartEdit: false\n};\n\nconst addScheduleReducer = (state = init, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ADD_SCHEDULE_SET_VALUE:\n            return { ...state, form: {...state.form, ...payload } };\n        case ADD_SCHEDULE_OPEN_DIALOG:\n            return { ...state, isDialogOpen: true };\n        case ADD_SCHEDULE_CLOSE_DIALOG:\n            return  init;\n        case ADD_SCHEDULE_START_EDIT:\n            return { ...state, isStartEdit: true };\n        default:\n            return state;\n        }\n};\n\nexport default addScheduleReducer;","import { StarTwoTone } from '@material-ui/icons';\nimport dayjs from 'dayjs';\nimport { \n    SCHEDULES_ADD_ITEM,\n    SCHEDULES_ADD_ITEM_SUCCESS,\n    SCHEDULES_FETCH_ITEM,\n    SCHEDULES_FETCH_ITEM_SUCCESS,\n    SCHEDULES_SET_LOADING,\n    SCHEDULES_DELETE_ITEM,\n    SCHEDULES_ASYNC_FAILURE,\n    SCHEDULES_RESET_ERROR\n\n } from \"./actions\";\n\nconst init = {\n    items: [],\n    isLoading: false,\n    error: null\n};\n\n            // array of items -> test\n            // id: 1,\n            // title: \"test\",\n            // date: dayjs(),\n            // location: \"class\",\n            // description: \"about coding\"\n\nconst scheduleReducer = (state = init, action) =>  {\n    const { type, payload, error } =  action;\n\n    switch(type) {\n        case SCHEDULES_ADD_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: [...state.items, payload]\n            };\n        case SCHEDULES_FETCH_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: payload\n            };\n        case SCHEDULES_SET_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case SCHEDULES_DELETE_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: payload\n            };\n        case SCHEDULES_ASYNC_FAILURE:\n            return { ...state, error };\n        case SCHEDULES_RESET_ERROR:\n            return { ...state, error: null };\n            default:\n                return state;\n    }\n};\n\nexport default scheduleReducer;","import {\n    CURRENT_SCHEDULE_SET_ITEM,\n    CURRENT_SCHEDULE_OPEN_DIALOG,\n    CURRENT_SCHEDULE_CLOSE_DIALOG\n} from './actions';\n\nconst init =  {\n    item: null,\n    isDialogOpen: false\n};\n\nconst currentScheduleReducer = (state = init, action) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case CURRENT_SCHEDULE_SET_ITEM:\n            return { ...state, item: payload };\n        case CURRENT_SCHEDULE_OPEN_DIALOG:\n            return { ...state, isDialogOpen: true };\n        case CURRENT_SCHEDULE_CLOSE_DIALOG:\n            return { ...state, isDialogOpen: false };\n        default:\n            return state;\n    }\n};\n\nexport default currentScheduleReducer;","import { combineReducers } from \"redux\";\n\nimport calendarReducer from \"./calendar/reducer\";\nimport addScheduleReducer from \"./addSchedule/reducer\";\nimport scheduleReducer from './schedules/reducer';\nimport currentScheduleReducer from './currentSchedule/reducer';\n\nconst rootReducer = combineReducers({ \n    calendar: calendarReducer,\n    addSchedule: addScheduleReducer,\n    currentSchedule: currentScheduleReducer,\n    schedules: scheduleReducer\n});\n\nexport default rootReducer;","export default __webpack_public_path__ + \"static/media/calendar_icon.5abf45c3.png\";","import React from \"react\";\n\nimport { \n    IconButton, \n    Toolbar, \n    Typography, \n    withStyles,\n    Dialog,\n    Tooltip,\n    DialogContent,\n    DialogActions,\n    Grid\n } from \"@material-ui/core\";\n\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { DatePicker } from '@material-ui/pickers';\nimport logo from '../../images/calendar_icon.png';\n\nconst StyledToolbar =  withStyles({\n    root: { margin: \"0\" }\n})(Toolbar);\n\nconst StyledTypography = withStyles({\n    root: { margin: \"0 30px 0 10px\" }\n})(Typography);\n\nconst StyledDatePicker = withStyles({\n    root:  { marginLeft: 30 }\n})(DatePicker);\n\nconst Navigation = ({ setNextMonth, setPreviousMonth, setMonth, month }) => {\n    // const [selectedDate, handleDateChange ] = useState(new Date());\n    return (\n        <StyledToolbar>\n            <IconButton>\n                <DehazeIcon />\n            </IconButton>\n            <img\n            src={logo}\n            width=\"40\"\n            height=\"40\"\n            />\n            <StyledTypography\n            color=\"textSecondary\"\n            variant=\"h5\"\n            component=\"h1\"\n            >\n                Calendar\n            </StyledTypography>\n            <Tooltip title=\"Previous month\" placement=\"bottom\">\n                <IconButton size=\"small\" onClick={setPreviousMonth}>\n                    <ArrowBackIos />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Next month\" placement=\"bottom\">\n                <IconButton size=\"small\" onClick={setNextMonth}>\n                    <ArrowForwardIos />\n                </IconButton>\n            </Tooltip>\n            <StyledDatePicker  \n            value={month}\n            onChange={setMonth}\n            variant=\"inline\"\n            format=\"YYYY MMM\"\n            animateYearScrolling\n            disableToolbar\n            />\n        </StyledToolbar>\n    );\n};\n\nexport default Navigation;","import Navigation from \"./presentation\";\n\nimport { connect } from \"react-redux\";\n\n\nimport { getNextMonth, getPreviousMonth, getMonth, formatMonth } from '../../services/calendar';\nimport { calendarSetMonth } from \"../../redux/calendar/actions\";\nimport { asyncSchedulesFetchItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ calendar: state.calendar });\n\nconst mapDispatchToProps = dispatch => ({\n    setMonth: month => {\n        dispatch(calendarSetMonth(month));\n    },\n\n    fetchItem: month => {\n        dispatch(asyncSchedulesFetchItem(month));\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) => ({\n    // setNextMonth: () => {\n    //     const nextMonth = getNextMonth(stateProps.calendar);\n    //     dispatchProps.setMonth(nextMonth);\n    \n        // redux state -> dayjs\n        month: getMonth(stateProps.calendar),\n\n        setNextMonth: () => {\n            const nextMonth = getNextMonth(stateProps.calendar);\n            dispatchProps.setMonth(nextMonth);\n            dispatchProps.fetchItem(nextMonth);\n        },\n        setPreviousMonth: () => {\n            const previousMonth = getPreviousMonth(stateProps.calendar);\n            dispatchProps.setMonth(previousMonth);\n            dispatchProps.fetchItem(previousMonth);\n        },\n\n        setMonth: dayObj => {\n            // dayjs -> redux state\n            const month = formatMonth(dayObj);\n            dispatchProps.setMonth(month);\n            dispatchProps.fetchItem(month);\n        }\n    \n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(Navigation);","import React from 'react';\nimport { \n    Dialog, \n    DialogContent,\n    TextField,\n    DialogActions,\n    Button,\n    Input,\n    Grid,\n    IconButton,\n    Typography,\n    Tooltip\n} from \"@material-ui/core\";\n\nimport { LocationOnOutlined, NotesOutlined, AccessTime, Close } from \"@material-ui/icons\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { withStyles } from \"@material-ui/styles\";\n\n// import * as styles from './style.css';\nimport \"./style.css\";\n\nconst spacer = { margin: \"4px 0\" };\n\nconst Title = withStyles({\n    root: { \n        // marginBottom: 32, \n        fontSize: 22 }\n})(Input);\n\nconst AddScheduleDialog = ({ \n    schedule: {\n        form: { title, location, description, date },\n         isDialogOpen,\n         isStartEdit\n        }, \n        closeDialog,\n        setSchedule,\n        saveSchedule,\n        setIsEditStart\n     }) => {\n\n        const isTitleInvalid = !title && isStartEdit;\n\n    return (\n        <Dialog\n        open={isDialogOpen}\n        onClose={closeDialog}\n        maxWidth=\"xs\"\n        fullWidth\n        >\n            <DialogActions>\n                <div \n                // className={styles.closeButton}\n                className=\"closeButton\"\n                >\n                    <Tooltip>\n                        <IconButton \n                        onClick={closeDialog} size=\"small\">\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </DialogActions>\n\n            <DialogContent>\n                <Title  \n                autoFocus \n                fullWidth \n                value={title}\n                placeholder=\"Add title and date\" \n                onChange={e => setSchedule({ title: e.target.value })}\n                onBlur={setIsEditStart}\n                error={isTitleInvalid}\n                />\n                <div \n                // className={styles.validation}\n                className=\"validation\"\n                >\n                    {isTitleInvalid && (\n                        <Typography variant=\"caption\" component=\"div\" color=\"error\">\n                            You need to fill the title\n                        </Typography>\n                    )}\n                </div>\n                <Grid\n                container\n                spacing={1}\n                alignItems=\"center\"\n                justify=\"space-between\"\n                >\n                    <Grid item>\n                        <AccessTime />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <DatePicker \n                        value={date}\n                        onChange={d => setSchedule({ date: d })}\n                        variant=\"inline\"\n                        format=\"MMM DD YYYY\"\n                        animateYearScrolling\n                        disableToolbar\n                        fullWidth\n                        style={spacer}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <LocationOnOutlined />\n                </Grid>\n                <Grid item xs={10}>\n                    <TextField style={spacer} fullWidth placeholder=\"Add a place\" />\n                </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n                    <Grid item>\n                        <NotesOutlined />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField \n                        style={spacer} \n                        fullWidth \n                        placeholder=\"Add a description\"\n                        value={description}\n                        onChange={e => setSchedule({ description: e.target.value })}\n                         />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" variant=\"outlined\" onClick={saveSchedule} disabled={!title}>\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default AddScheduleDialog;","import { connect } from \"react-redux\";\nimport AddScheduleDialog from  \"./presentation\";\n\nimport { isCloseDialog } from \"../../services/schedule\";\n\nimport {\n    addScheduleCloseDialog,\n    addScheduleSetValue,\n    addScheduleStartEdit\n} from \"../../redux/addSchedule/actions\";\n\n// import { schedulesAddItem } from '../../redux/schedules/actions';\nimport { asyncSchedulesAddItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ schedule: state.addSchedule });\n\nconst mapDispatchToProps = dispatch => ({\n    setSchedule: value => {\n        dispatch(addScheduleSetValue(value));\n    },\n    closeDialog: () => {\n        dispatch(addScheduleCloseDialog())\n    },\n    saveSchedule: schedule => {\n        dispatch(asyncSchedulesAddItem(schedule));\n        // dispatch(schedulesAddItem(schedule));\n        dispatch(addScheduleCloseDialog());\n    },\n    setIsEditStart: () => {\n        dispatch(addScheduleStartEdit());\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) => {\n    const {\n        schedule: { form: schedule }\n    } =  stateProps;\n    const { saveSchedule, closeDialog } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...dispatchProps,\n        saveSchedule: () => {\n            saveSchedule(schedule);\n        },\n        closeDialog: () => {\n            if(isCloseDialog(schedule)) {\n                closeDialog();\n            }\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddScheduleDialog);","import React from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    IconButton,\n    DialogActions,\n    Grid,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\n\nimport { Close, LocationOnOutlined, NotesOutlined, DeleteOutlineOutlined } from \"@material-ui/icons\";\n\n// import styles from \"./style.css\";\nimport \"./style.css\";\n\nconst spacer = (top, bottom) => ({\n    margin: `${top}px 0 ${bottom}px 0`\n});\n\nconst CurrentScheduleDialog = ({\n    schedule: { item, isDialogOpen },\n    closeDialog,\n    deleteItem\n}) => {\n    return(\n        <Dialog \n        open={isDialogOpen} \n        onClose={closeDialog}\n        maxWidth=\"xs\"\n        fullWidth\n        >\n            <DialogActions>\n                <div \n                // className={styles.closeButton}\n                className=\"closeButton\"\n                >\n                    <Tooltip title=\"Delete\" placement=\"bottom\">\n                        <IconButton onClick={deleteItem}  size=\"small\">\n                            <DeleteOutlineOutlined />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Close\" placement=\"bottom\">\n                        <IconButton onClick={closeDialog}  size=\"small\">\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </DialogActions>\n\n            <DialogContent>\n                {item && (\n                    <>\n                    <div>\n                        <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"space-between\"\n                        style={spacer(0, 30)}\n                        >\n                            <Grid item>\n                                <span \n                                // className={styles.box}\n                                className=\"box\"\n                                ></span>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {item.title}\n                                </Typography>\n                                <Typography color=\"textSecondary\">\n                                    {item.date.format(\"MMM DD\")}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    {item.location && (\n                        <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"space-between\"\n                        style={spacer(0, 4)}\n                        >\n                            <Grid item>\n                                <NotesOutlined />\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography>\n                                    {item.description}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    )}\n                    </>\n                )}\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default CurrentScheduleDialog;","import { connect } from 'react-redux';\nimport AddScheduleDialog from './presentation';\n\nimport { currentScheduleCloseDialog } from '../../redux/currentSchedule/actions';\n\nimport { asyncSchedulesDeleteItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ schedule: state.currentSchedule });\n\nconst mapDispatchToProps = dispatch => ({\n    closeDialog: () => {\n        dispatch(currentScheduleCloseDialog());\n    },\n    deleteItem: id => {\n        dispatch(asyncSchedulesDeleteItem(id));\n        dispatch(currentScheduleCloseDialog());\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) =>  ({\n    ...stateProps,\n    ...dispatchProps,\n    deleteItem: () => {\n        const { id } =  stateProps.schedule.item;\n        dispatchProps.deleteItem(id);\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddScheduleDialog);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport CalendarBoard from \"./components/CalendarBoard/container\";\nimport rootReducer from \"./redux/rootReducer\";\nimport Navigation from \"./components/Navigation/container\";\nimport AddScheduleDialog from \"./components/AddScheduleDialog/container\";\n\nimport DayjsUtils from \"@date-io/dayjs\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport CurrentScheduleDialog from './components/CurrentScheduleDialog/container';\n\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/en-ca\";\n// import \"dayjs/locale/ja\";\ndayjs.locale(\"en-ca\");\n// dayjs.locale(\"ja\");\n\n// import ErrorSnackbar from \"./components/ErrorSnackbar/container\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\nconst App = () => (\n    <Provider store={store}>\n        <MuiPickersUtilsProvider utils={DayjsUtils}>\n            <Navigation />\n            <CalendarBoard />\n            <AddScheduleDialog />\n            <CurrentScheduleDialog />\n            {/* <ErrorSnackbar /> */}\n        </MuiPickersUtilsProvider>\n    </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}