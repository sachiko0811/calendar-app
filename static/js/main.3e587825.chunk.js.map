{"version":3,"sources":["components/Schedule/index.js","services/calendar.js","components/CalendarElements/index.jsx","components/CalendarBoard/presentation.jsx","redux/addSchedule/actions.js","redux/currentSchedule/actions.js","services/schedule.js","redux/schedules/actions.js","services/api.js","redux/schedules/effects.js","components/CalendarBoard/container.jsx","redux/calendar/actions.js","redux/calendar/reducer.js","redux/addSchedule/reducer.js","redux/schedules/reducer.js","redux/currentSchedule/reducer.js","redux/rootReducer.js","components/Navigation/presentation.jsx","components/Navigation/container.jsx","components/AddScheduleDialog/presentation.jsx","components/AddScheduleDialog/container.jsx","components/CurrentScheduleDialog/presentation.jsx","components/CurrentScheduleDialog/container.jsx","index.jsx"],"names":["Schedule","schedule","onClickSchedule","className","styles","onClick","e","title","getMonth","year","month","dayjs","isSameDay","d1","d2","format","getMonthStateCreator","diff","day","add","formatMonth","getNextMonth","getPreviousMonth","CalendarElement","schedules","props","today","textColor","m1","m2","isSameMonth","date","isFirstDay","isToday","Typography","color","align","variant","component","map","id","CalendarBoard","calendar","openAddScheduleDialog","openCurrentScheduleDialog","fetchSchedule","useEffect","GridList","cols","spacing","cellHeight","toISOString","ADD_SCHEDULE_SET_VALUE","ADD_SCHEDULE_OPEN_DIALOG","ADD_SCHEDULE_CLOSE_DIALOG","ADD_SCHEDULE_START_EDIT","addScheduleSetValue","payload","type","addScheduleCloseDialog","CURRENT_SCHEDULE_SET_ITEM","CURRENT_SCHEDULE_OPEN_DIALOG","CURRENT_SCHEDULE_CLOSE_DIALOG","currentScheduleCloseDialog","formatSchedule","isScheduleEmpty","description","location","SCHEDULES_ADD_ITEM","SCHEDULES_FETCH_ITEM","SCHEDULES_SET_LOADING","SCHEDULES_DELETE_ITEM","SCHEDULES_ASYNC_FAILURE","SCHEDULES_RESET_ERROR","schedulesSetLoading","schedulesAsyncFailure","error","url","path","header","headers","get","a","fetch","resp","checkError","status","json","result","post","body","options","method","JSON","stringify","deleteRequest","Error","asyncSchedulesFetchItem","dispatch","formatedSchedule","r","message","connect","state","d","stopPropagation","stateProps","dispatchProps","items","c","filter","setSchedules","firstDay","firstDayIndex","Array","fill","_","i","diffFromFirstDay","createCalendar","CALENDAR_SET_MONTH","init","calendarReducer","action","form","isDialogOpen","isStartEdit","addScheduleReducer","isLoading","scheduleReducer","item","currentScheduleReducer","rootReducer","combineReducers","addSchedule","currentSchedule","StyledToolbar","withStyles","root","margin","Toolbar","StyledTypography","StyledDatePicker","marginLeft","DatePicker","Navigation","setNextMonth","setPreviousMonth","setMonth","IconButton","src","width","height","Tooltip","placement","size","value","onChange","animateYearScrolling","disableToolbar","fetchItem","nextMonth","previousMonth","dayObj","spacer","Title","fontSize","Input","AddScheduleDialog","closeDialog","setSchedule","saveSchedule","setIsEditStart","isTitleInvalid","Dialog","open","onClose","maxWidth","fullWidth","DialogActions","Close","DialogContent","autoFocus","placeholder","target","onBlur","Grid","container","alignItems","justify","AccessTime","xs","style","LocationOnOutlined","TextField","NotesOutlined","Button","disabled","newSchedule","console","log","asyncSchedulesAddItem","window","confirm","isCloseDialog","top","bottom","CurrentScheduleDialog","deleteItem","closeButton","DeleteOutlineOutlined","box","getState","currentSchedules","newSchedules","s","asyncSchedulesDeleteItem","locale","store","createStore","applyMiddleware","thunk","App","utils","DayjsUtils","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e587825.chunk.js","sourcesContent":["import React from \"react\";\n\nimport * as styles from './style.css';\n\nconst Schedule = ({ schedule, onClickSchedule }) => {\n    return (\n    <div \n    className={styles.schedule}\n    onClick={e => onClickSchedule(schedule, e)}\n    >\n        {schedule.title}\n    </div>\n    )\n};\n\nexport default Schedule;","import dayjs from \"dayjs\";\n\nexport const createCalendar = month => {\n    // adding first day of this month\n    const firstDay = getMonth(month);\n    // const firstDay = dayjs().startOf(\"month\");\n\n    // getting days of week of the first day index\n    const firstDayIndex = firstDay.day();\n    // const firstDayIndex = firstDay.day();\n\n    return Array(35)\n    .fill(0) // If I don't put this, then there's nothing in the array so I can't see anything on the browser\n    .map((_, i) => {\n        const diffFromFirstDay = i - firstDayIndex;\n        const day = firstDay.add(diffFromFirstDay, \"day\");\n        // console.log(day);\n        return day;\n    });\n}\n\nexport const getMonth = ({ year, month }) => {\n    return dayjs(`${year}-${month}`);\n}\n\nexport const isSameDay = (d1, d2) => {\n    const format = \"YYYYMMDD\";\n    return d1.format(format) === d2.format(format);\n}\n\nexport const isSameMonth = (m1, m2) => {\n    const format = \"YYYYMM\";\n    return m1.format(format) === m2.format(format);\n}\n\n// format of string\nexport const isFirstDay = day => day.date() === 1;\n\nexport const getMonthStateCreator = diff => month => {\n    const day = getMonth(month).add(diff, \"month\");\n    return formatMonth(day);\n}\n\nexport const getNextMonth = getMonthStateCreator(1);\nexport const getPreviousMonth = getMonthStateCreator(-1);\n\nexport const formatMonth = day => ({\n    month: day.month() + 1,\n    year: day.year()\n});","import React from \"react\";\n\nimport * as styles from \"./style.css\";\n\nimport Schedule from '../Schedule';\n\nimport { Typography } from \"@material-ui/core\";\nimport { isSameDay, isSameMonth, isFirstDay, getMonth } from \"../../services/calendar\";\n\nimport  dayjs from \"dayjs\";\n\nconst CalendarElement = ({ day, month, schedules, ...props }) => {\n\n    \n    // const isFirstDay = day.date() === 1;\n    \n\n    // Today\n    const today = dayjs();\n    // const compareFormat = \"YYYYMMDD\";\n    // const isToday = day.format(compareFormat) === today.format(compareFormat);\n\n    // greydown for the other months\n    // const isCurrentMonth = day.month() === today.month();\n    const currentMonth = getMonth(month);\n    const isCurrentMonth = isSameMonth(day, currentMonth);\n    const textColor = isCurrentMonth ? \"textPrimary\" : \"textSecondary\";\n\n    // setting the month info for the first day of the month\n    const format = isFirstDay(day) ? \"MMM DD\" : \"DD\";\n\n    // today or not\n    const isToday = isSameDay(day, today);\n\n    return(\n        <div className={styles.element}>\n            <Typography \n            className={styles.date}\n            color={textColor}\n            align=\"center\"\n            variant=\"caption\"\n            component=\"div\"\n            >\n                <span className={isToday ? styles.today : \"\"}>\n                    {day.format(format)}\n                </span>\n            </Typography>\n            <div className={styles.schedules}>\n                {schedules.map(e =>  (\n                    <Schedule key={e.id} schedule={e} {...props} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default CalendarElement;","import React, { useEffect } from 'react';\nimport { GridList, Typography } from \"@material-ui/core\";\n\nimport CalendarElement from \"../CalendarElements\";\n// import { createCalendar } from \"../../services/calendar\";\n\n// import dayjs from \"dayjs\";\n// import \"dayjs/locale/ja\";\n// dayjs.locale(\"ja\");\n\nimport * as styles from \"./style.css\";\n\n// const calendar = createCalendar();\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst CalendarBoard = ({ \n    calendar, \n    month, \n    openAddScheduleDialog,\n    openCurrentScheduleDialog,\n    fetchSchedule\n    // schedules\n }) => {\n     useEffect(() => {\n         fetchSchedule();\n     }, []);\n    // console.log(calendar);\n    // console.log(schedules);\n    return (\n        <div className={styles.container}>\n            <GridList \n            className={styles.grid}\n            cols={7}\n            spacing={0}\n            cellHeight=\"auto\"\n            >\n                {calendar.map(({ date, schedules }) => (\n                    <li \n                    key={date.toISOString()}\n                    onClick={() => openAddScheduleDialog(date)}\n                    >\n                        <CalendarElement \n                        day={date}\n                        month={month}\n                        schedules={schedules}\n                        onClickSchedule={openCurrentScheduleDialog}\n                        />\n\n                        {/* <Typography\n                        className={styles.days}\n                        color=\"textSecondary\"\n                        align=\"center\"\n                        variant=\"caption\"\n                        component=\"div\"\n                        >\n                        {d}\n                        </Typography> */}\n                    </li>\n                ))}\n                {/* {calendar.map(c => (\n                    <li key={c.toISOString()} onClick={() => openAddScheduleDialog(c)}>\n                        <CalendarElement day={c} month={month} />\n                    </li>\n                ))} */}\n            {/* {calendar.map(c => (\n                <li>{c}</li>\n            ))} */}\n            </GridList>\n        </div>\n    )\n}\n\n\nexport default CalendarBoard;","// constants\nexport const ADD_SCHEDULE_SET_VALUE = \"ADD_SCHEDULE_SET_VALUE\";\nexport const ADD_SCHEDULE_OPEN_DIALOG = \"ADD_SCHEDULE_OPEN_DIALOG\";\nexport const ADD_SCHEDULE_CLOSE_DIALOG = \"ADD_SCHEDULE_CLOSE_DIALOG\";\nexport const ADD_SCHEDULE_START_EDIT = \"ADD_SCHEDULE_START_EDIT\";\n\n// actions\nexport const addScheduleSetValue = payload => ({\n    type: ADD_SCHEDULE_SET_VALUE,\n    payload\n});\n\nexport const addScheduleOpenDialog = () => ({\n    type: ADD_SCHEDULE_OPEN_DIALOG\n});\n\nexport const addScheduleCloseDialog = () => ({\n    type: ADD_SCHEDULE_CLOSE_DIALOG\n});\n\nexport const addScheduleStartEdit = () => ({\n    type: ADD_SCHEDULE_START_EDIT\n});","// constants\nexport const CURRENT_SCHEDULE_SET_ITEM = \"CURRENT_SCHEDULE_SET_ITEM\";\nexport const CURRENT_SCHEDULE_OPEN_DIALOG = \"CURRENT_SCHEDULE_OPEN_DIALOG\";\nexport const CURRENT_SCHEDULE_CLOSE_DIALOG = \"CURRENT_SCHEDULE_CLOSE_DIALOG\";\n\n// actions\nexport const currentScheduleSetItem = payload => ({\n    type: CURRENT_SCHEDULE_SET_ITEM,\n    payload\n});\n\nexport const currentScheduleOpenDialog = () => ({\n    type: CURRENT_SCHEDULE_OPEN_DIALOG\n});\n\nexport const currentScheduleCloseDialog = () => ({\n    type: CURRENT_SCHEDULE_CLOSE_DIALOG\n});","import { isSameDay } from \"./calendar\";\nimport dayjs from 'dayjs';\n\nexport const setSchedules = (calendar, schedules) => \n    calendar.map(c => ({\n        date: c,\n        schedules: schedules.filter(e => isSameDay(e.date, c))\n    }));\n\nexport const formatSchedule = schedule => ({\n\n    ...schedule,\n    date: dayjs(schedule.date)\n});\n\nexport const isCloseDialog = schedule => {\n    const message = \"Do you want to discard before saving?\";\n\n    return isScheduleEmpty(schedule) || window.confirm(message);\n}\n\nconst isScheduleEmpty = schedule =>\n    !schedule.title && !schedule.description && !schedule.location;","// constants\nexport const SCHEDULES_ADD_ITEM = \"SCHEDULES_ADD_ITEM\";\nexport const SCHEDULES_FETCH_ITEM = \"SCHEDULES_FETCH_ITEM\";\nexport const SCHEDULES_SET_LOADING  =\"SCHEDULES_SET_LOADING\";\nexport const SCHEDULES_DELETE_ITEM = \"SCHEDULES_DELETE_ITEM\";\nexport const SCHEDULES_ASYNC_FAILURE = \"SCHEDULES_ASYNC_FAILURE\";\nexport const SCHEDULES_RESET_ERROR = \"SCHEDULES_RESET_ERROR\";\n\n\n//  actions\nexport const schedulesAddItem = payload => ({\n    type: SCHEDULES_ADD_ITEM,\n    payload\n});\n\nexport const schedulesFetchItem = payload => ({\n    type: SCHEDULES_FETCH_ITEM,\n    payload\n});\n\nexport const schedulesSetLoading = () => ({\n    type: SCHEDULES_SET_LOADING\n});\n\nexport const schedulesDeleteItem = payload => ({\n    type: SCHEDULES_DELETE_ITEM,\n    payload\n});\n\nexport const schedulesAsyncFailure = error => ({\n    type: SCHEDULES_ASYNC_FAILURE,\n    error\n});\n\nexport const schedulesResetError = () => ({\n    type: SCHEDULES_RESET_ERROR\n});","const host = \"http://localhost:3000/api\";\nconst url = path => `${host}/${path}`;\n\nconst header = {\n    headers: {\n        \"Content-type\" : \"application/json\"\n    }\n}\n\nexport const get = async path => {\n    const resp = await fetch(url(path));\n    checkError(resp.status);\n    const result = await resp.json();\n\n    return result;\n}\n\nexport const post = async (path, body) => {\n    const options = {...header, method: \"POST\", body: JSON.stringify(body) };\n\n    const resp = await fetch(url(path), options);\n    checkError(resp.status);\n    const result = await resp.json();\n\n    return result;\n}\n\n\nexport const deleteRequest = async path => {\n    const options = { method: \"DELETE\" };\n\n    const resp = await fetch(url(path), options);\n    checkError(resp.status);\n\n    // 204 No Content is gonna return so if it works successfully then return nothing\n    return;\n};\n\nconst checkError = status => {\n    // over 400 case -> just show \"error\"\n    if(status >= 400) {\n        throw new Error('There are errors. Please try it again later.');\n    }\n};","import { \n    schedulesSetLoading, \n    schedulesFetchItem, \n    schedulesAddItem, \n    schedulesDeleteItem,\n    schedulesAsyncFailure\n } from \"./actions\";\nimport { get, post, deleteRequest } from \"../../services/api\";\nimport { formatSchedule } from \"../../services/schedule\";\n\nexport const asyncSchedulesFetchItem = ({ month, year }) => async dispatch => {\n    (schedulesSetLoading());\n\n\n    try {\n        const result = await get(`schedules`);\n        // const result = await get(`schedules?month=${month}&year=${year}`);\n        const formatedSchedule = result.map(r => formatSchedule(r));\n\n        dispatch(schedulesFetchItem(formatedSchedule));\n    } catch(err) {\n        // console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n}\n\nexport const asyncSchedulesAddItem = schedule => async dispatch => {\n    // doing loading: true\n    dispatch(schedulesSetLoading());\n\n    // possible to catch the async error\n    try{\n        const body = { ...schedule, date: schedule.date.toISOString() };\n        const result = await post(\"schedules\", body);\n\n        const newSchedule = formatSchedule(result);\n        dispatch(schedulesAddItem(newSchedule));\n    } catch (err) {\n        console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n};\n\nexport const asyncSchedulesDeleteItem = id => async (dispatch, getState) => {\n    dispatch(schedulesSetLoading());\n    const currentSchedules = getState().schedules.items;\n\n    try {\n        await deleteRequest(`schedules/${id}`);\n\n        // if it works perfectly, then delete  the local state\n        const newSchedules = currentSchedules.filter(s => s.id !== id);\n        dispatch(schedulesDeleteItem(newSchedules));\n\n    } catch (err) {\n        console.log(err);\n        dispatch(schedulesAsyncFailure(err.message));\n    }\n}","import { connect } from \"react-redux\";\nimport CalendarBoard from \"./presentation\";\nimport { createCalendar } from \"../../services/calendar\";\n\nimport { \n    addScheduleOpenDialog,\n    addScheduleSetValue\n } from '../../redux/addSchedule/actions';\n\n import {\n     currentScheduleSetItem,\n     currentScheduleOpenDialog\n } from \"../../redux/currentSchedule/actions\";\n\nimport { setSchedules } from \"../../services/schedule\";\n\nimport { asyncSchedulesFetchItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ \n    calendar: state.calendar, \n    schedules: state.schedules\n});\n\nconst mapDispatchToProps = dispatch => ({\n    openAddScheduleDialog: d => {\n        dispatch(addScheduleOpenDialog(true));\n        dispatch(addScheduleSetValue({ date: d }));\n    },\n\n    openCurrentScheduleDialog: (schedule, e) => {\n        // stop the other event to start\n        e.stopPropagation();\n\n        dispatch(currentScheduleSetItem(schedule));\n        dispatch(currentScheduleOpenDialog());\n    },\n\n    fetchSchedule: month => {\n        dispatch(asyncSchedulesFetchItem(month));\n    }\n})\n\nconst mergeProps = (stateProps, dispatchProps) => {\n    const {\n        calendar: month,\n        schedules: { items: schedules }\n    } = stateProps;\n\n    const calendar = setSchedules(createCalendar(month), schedules);\n\n    return {\n        ...stateProps,\n        ...dispatchProps,\n        fetchSchedule: () => dispatchProps.fetchSchedule(month),\n        calendar,\n        month\n    }\n};\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps, \n    mergeProps\n    )(CalendarBoard);","// constants\nexport const CALENDAR_SET_MONTH = \"CALENDAR_SET_MONTH\";\n\n// actions\nexport const calendarSetMonth = payload => ({\n    type: CALENDAR_SET_MONTH,\n    payload\n});","import dayjs from \"dayjs\";\n\nimport { CALENDAR_SET_MONTH } from \"./actions\";\n\nimport { formatMonth } from '../../services/calendar';\n\nconst day = dayjs();\n\nconst init = formatMonth(day);\n\n// const init = {\n//     year: day.year(),\n//     month: day.month() + 1\n// }\n\nconst calendarReducer = (state = init, action) => {\n    const { type, payload } = action;\n    switch(type) {\n        case CALENDAR_SET_MONTH:\n            return payload;\n            default:\n                return state;\n    }\n}\n\nexport default calendarReducer;","import {\n    ADD_SCHEDULE_SET_VALUE,\n    ADD_SCHEDULE_OPEN_DIALOG,\n    ADD_SCHEDULE_CLOSE_DIALOG,\n    ADD_SCHEDULE_START_EDIT\n} from \"./actions\";\n\nimport dayjs from \"dayjs\";\n\nconst init = {\n    form: {\n        title: \"\",\n        description: \"\",\n        date: null,\n        // date: dayjs(),\n        location: \"\"\n    },\n    isDialogOpen:  false,\n    isStartEdit: false\n};\n\nconst addScheduleReducer = (state = init, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ADD_SCHEDULE_SET_VALUE:\n            return { ...state, form: {...state.form, ...payload } };\n        case ADD_SCHEDULE_OPEN_DIALOG:\n            return { ...state, isDialogOpen: true };\n        case ADD_SCHEDULE_CLOSE_DIALOG:\n            return  init;\n        case ADD_SCHEDULE_START_EDIT:\n            return { ...state, isStartEdit: true };\n        default:\n            return state;\n        }\n};\n\nexport default addScheduleReducer;","import { StarTwoTone } from '@material-ui/icons';\nimport dayjs from 'dayjs';\nimport { \n    SCHEDULES_ADD_ITEM,\n    SCHEDULES_ADD_ITEM_SUCCESS,\n    SCHEDULES_FETCH_ITEM,\n    SCHEDULES_FETCH_ITEM_SUCCESS,\n    SCHEDULES_SET_LOADING,\n    SCHEDULES_DELETE_ITEM,\n    SCHEDULES_ASYNC_FAILURE,\n    SCHEDULES_RESET_ERROR\n\n } from \"./actions\";\n\nconst init = {\n    items: [],\n    isLoading: false,\n    error: null\n};\n\n            // array of items -> test\n            // id: 1,\n            // title: \"test\",\n            // date: dayjs(),\n            // location: \"class\",\n            // description: \"about coding\"\n\nconst scheduleReducer = (state = init, action) =>  {\n    const { type, payload, error } =  action;\n\n    switch(type) {\n        case SCHEDULES_ADD_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: [...state.items, payload]\n            };\n        case SCHEDULES_FETCH_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: payload\n            };\n        case SCHEDULES_SET_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case SCHEDULES_DELETE_ITEM:\n            return {\n                ...state,\n                isLoading: false,\n                items: payload\n            };\n        case SCHEDULES_ASYNC_FAILURE:\n            return { ...state, error };\n        case SCHEDULES_RESET_ERROR:\n            return { ...state, error: null };\n            default:\n                return state;\n    }\n};\n\nexport default scheduleReducer;","import {\n    CURRENT_SCHEDULE_SET_ITEM,\n    CURRENT_SCHEDULE_OPEN_DIALOG,\n    CURRENT_SCHEDULE_CLOSE_DIALOG\n} from './actions';\n\nconst init =  {\n    item: null,\n    isDialogOpen: false\n};\n\nconst currentScheduleReducer = (state = init, action) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case CURRENT_SCHEDULE_SET_ITEM:\n            return { ...state, item: payload };\n        case CURRENT_SCHEDULE_OPEN_DIALOG:\n            return { ...state, isDialogOpen: true };\n        case CURRENT_SCHEDULE_CLOSE_DIALOG:\n            return { ...state, isDialogOpen: false };\n        default:\n            return state;\n    }\n};\n\nexport default currentScheduleReducer;","import { combineReducers } from \"redux\";\n\nimport calendarReducer from \"./calendar/reducer\";\nimport addScheduleReducer from \"./addSchedule/reducer\";\nimport scheduleReducer from './schedules/reducer';\nimport currentScheduleReducer from './currentSchedule/reducer';\n\nconst rootReducer = combineReducers({ \n    calendar: calendarReducer,\n    addSchedule: addScheduleReducer,\n    currentSchedule: currentScheduleReducer,\n    schedules: scheduleReducer\n});\n\nexport default rootReducer;","import React from \"react\";\n\nimport { \n    IconButton, \n    Toolbar, \n    Typography, \n    withStyles,\n    Dialog,\n    Tooltip,\n    DialogContent,\n    DialogActions,\n    Grid\n } from \"@material-ui/core\";\n\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { DatePicker } from '@material-ui/pickers';\n\nconst StyledToolbar =  withStyles({\n    root: { margin: \"0\" }\n})(Toolbar);\n\nconst StyledTypography = withStyles({\n    root: { margin: \"0 30px 0 10px\" }\n})(Typography);\n\nconst StyledDatePicker = withStyles({\n    root:  { marginLeft: 30 }\n})(DatePicker);\n\nconst Navigation = ({ setNextMonth, setPreviousMonth, setMonth, month }) => {\n    // const [selectedDate, handleDateChange ] = useState(new Date());\n    return (\n        <StyledToolbar>\n            <IconButton>\n                <DehazeIcon />\n            </IconButton>\n            <img\n            src=\"/images/calendar_icon.png\"\n            width=\"40\"\n            height=\"40\"\n            />\n            <StyledTypography\n            color=\"textSecondary\"\n            variant=\"h5\"\n            component=\"h1\"\n            >\n                Calendar\n            </StyledTypography>\n            <Tooltip title=\"Previous month\" placement=\"bottom\">\n                <IconButton size=\"small\" onClick={setPreviousMonth}>\n                    <ArrowBackIos />\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Next month\" placement=\"bottom\">\n                <IconButton size=\"small\" onClick={setNextMonth}>\n                    <ArrowForwardIos />\n                </IconButton>\n            </Tooltip>\n            <StyledDatePicker  \n            value={month}\n            onChange={setMonth}\n            variant=\"inline\"\n            format=\"YYYY MMM\"\n            animateYearScrolling\n            disableToolbar\n            />\n        </StyledToolbar>\n    );\n};\n\nexport default Navigation;","import Navigation from \"./presentation\";\n\nimport { connect } from \"react-redux\";\n\n\nimport { getNextMonth, getPreviousMonth, getMonth, formatMonth } from '../../services/calendar';\nimport { calendarSetMonth } from \"../../redux/calendar/actions\";\nimport { asyncSchedulesFetchItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ calendar: state.calendar });\n\nconst mapDispatchToProps = dispatch => ({\n    setMonth: month => {\n        dispatch(calendarSetMonth(month));\n    },\n\n    fetchItem: month => {\n        dispatch(asyncSchedulesFetchItem(month));\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) => ({\n    // setNextMonth: () => {\n    //     const nextMonth = getNextMonth(stateProps.calendar);\n    //     dispatchProps.setMonth(nextMonth);\n    \n        // redux state -> dayjs\n        month: getMonth(stateProps.calendar),\n\n        setNextMonth: () => {\n            const nextMonth = getNextMonth(stateProps.calendar);\n            dispatchProps.setMonth(nextMonth);\n            dispatchProps.fetchItem(nextMonth);\n        },\n        setPreviousMonth: () => {\n            const previousMonth = getPreviousMonth(stateProps.calendar);\n            dispatchProps.setMonth(previousMonth);\n            dispatchProps.fetchItem(previousMonth);\n        },\n\n        setMonth: dayObj => {\n            // dayjs -> redux state\n            const month = formatMonth(dayObj);\n            dispatchProps.setMonth(month);\n            dispatchProps.fetchItem(month);\n        }\n    \n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(Navigation);","import React from 'react';\nimport { \n    Dialog, \n    DialogContent,\n    TextField,\n    DialogActions,\n    Button,\n    Input,\n    Grid,\n    IconButton,\n    Typography,\n    Tooltip\n} from \"@material-ui/core\";\n\nimport { LocationOnOutlined, NotesOutlined, AccessTime, Close } from \"@material-ui/icons\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { withStyles } from \"@material-ui/styles\";\n\nimport * as styles from './style.css';\n\nconst spacer = { margin: \"4px 0\" };\n\nconst Title = withStyles({\n    root: { \n        // marginBottom: 32, \n        fontSize: 22 }\n})(Input);\n\nconst AddScheduleDialog = ({ \n    schedule: {\n        form: { title, location, description, date },\n         isDialogOpen,\n         isStartEdit\n        }, \n        closeDialog,\n        setSchedule,\n        saveSchedule,\n        setIsEditStart\n     }) => {\n\n        const isTitleInvalid = !title && isStartEdit;\n\n    return (\n        <Dialog\n        open={isDialogOpen}\n        onClose={closeDialog}\n        maxWidth=\"xs\"\n        fullWidth\n        >\n            <DialogActions>\n                <div className={styles.closeButton}>\n                    <Tooltip>\n                        <IconButton onClick={closeDialog} size=\"small\">\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </DialogActions>\n\n            <DialogContent>\n                <Title  \n                autoFocus \n                fullWidth \n                value={title}\n                placeholder=\"Add title and date\" \n                onChange={e => setSchedule({ title: e.target.value })}\n                onBlur={setIsEditStart}\n                error={isTitleInvalid}\n                />\n                <div className={styles.validation}>\n                    {isTitleInvalid && (\n                        <Typography variant=\"caption\" component=\"div\" color=\"error\">\n                            You need to fill the title\n                        </Typography>\n                    )}\n                </div>\n                <Grid\n                container\n                spacing={1}\n                alignItems=\"center\"\n                justify=\"space-between\"\n                >\n                    <Grid item>\n                        <AccessTime />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <DatePicker \n                        value={date}\n                        onChange={d => setSchedule({ date: d })}\n                        variant=\"inline\"\n                        format=\"MMM DD YYYY\"\n                        animateYearScrolling\n                        disableToolbar\n                        fullWidth\n                        style={spacer}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <LocationOnOutlined />\n                </Grid>\n                <Grid item xs={10}>\n                    <TextField style={spacer} fullWidth placeholder=\"Add a place\" />\n                </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n                    <Grid item>\n                        <NotesOutlined />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField \n                        style={spacer} \n                        fullWidth \n                        placeholder=\"Add a description\"\n                        value={description}\n                        onChange={e => setSchedule({ description: e.target.value })}\n                         />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" variant=\"outlined\" onClick={saveSchedule} disabled={!title}>\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default AddScheduleDialog;","import { connect } from \"react-redux\";\nimport AddScheduleDialog from  \"./presentation\";\n\nimport { isCloseDialog } from \"../../services/schedule\";\n\nimport {\n    addScheduleCloseDialog,\n    addScheduleSetValue,\n    addScheduleStartEdit\n} from \"../../redux/addSchedule/actions\";\n\n// import { schedulesAddItem } from '../../redux/schedules/actions';\nimport { asyncSchedulesAddItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ schedule: state.addSchedule });\n\nconst mapDispatchToProps = dispatch => ({\n    setSchedule: value => {\n        dispatch(addScheduleSetValue(value));\n    },\n    closeDialog: () => {\n        dispatch(addScheduleCloseDialog())\n    },\n    saveSchedule: schedule => {\n        dispatch(asyncSchedulesAddItem(schedule));\n        // dispatch(schedulesAddItem(schedule));\n        dispatch(addScheduleCloseDialog());\n    },\n    setIsEditStart: () => {\n        dispatch(addScheduleStartEdit());\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) => {\n    const {\n        schedule: { form: schedule }\n    } =  stateProps;\n    const { saveSchedule, closeDialog } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...dispatchProps,\n        saveSchedule: () => {\n            saveSchedule(schedule);\n        },\n        closeDialog: () => {\n            if(isCloseDialog(schedule)) {\n                closeDialog();\n            }\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddScheduleDialog);","import React from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    IconButton,\n    DialogActions,\n    Grid,\n    Typography,\n    Tooltip\n} from '@material-ui/core';\n\nimport { Close, LocationOnOutlined, NotesOutlined, DeleteOutlineOutlined } from \"@material-ui/icons\";\n\nimport styles from \"./style.css\";\nconst spacer = (top, bottom) => ({\n    margin: `${top}px 0 ${bottom}px 0`\n});\n\nconst CurrentScheduleDialog = ({\n    schedule: { item, isDialogOpen },\n    closeDialog,\n    deleteItem\n}) => {\n    return(\n        <Dialog \n        open={isDialogOpen} \n        onClose={closeDialog}\n        maxWidth=\"xs\"\n        fullWidth\n        >\n            <DialogActions>\n                <div className={styles.closeButton}>\n                    <Tooltip title=\"Delete\" placement=\"bottom\">\n                        <IconButton onClick={deleteItem}  size=\"small\">\n                            <DeleteOutlineOutlined />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Close\" placement=\"bottom\">\n                        <IconButton onClick={closeDialog}  size=\"small\">\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </DialogActions>\n\n            <DialogContent>\n                {item && (\n                    <>\n                    <div>\n                        <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"space-between\"\n                        style={spacer(0, 30)}\n                        >\n                            <Grid item>\n                                <span className={styles.box}></span>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {item.title}\n                                </Typography>\n                                <Typography color=\"textSecondary\">\n                                    {item.date.format(\"MMM DD\")}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    {item.location && (\n                        <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"space-between\"\n                        style={spacer(0, 4)}\n                        >\n                            <Grid item>\n                                <NotesOutlined />\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography>\n                                    {item.description}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    )}\n                    </>\n                )}\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default CurrentScheduleDialog;","import { connect } from 'react-redux';\nimport AddScheduleDialog from './presentation';\n\nimport { currentScheduleCloseDialog } from '../../redux/currentSchedule/actions';\n\nimport { asyncSchedulesDeleteItem } from \"../../redux/schedules/effects\";\n\nconst mapStateToProps = state => ({ schedule: state.currentSchedule });\n\nconst mapDispatchToProps = dispatch => ({\n    closeDialog: () => {\n        dispatch(currentScheduleCloseDialog());\n    },\n    deleteItem: id => {\n        dispatch(asyncSchedulesDeleteItem(id));\n        dispatch(currentScheduleCloseDialog());\n    }\n});\n\nconst mergeProps = (stateProps, dispatchProps) =>  ({\n    ...stateProps,\n    ...dispatchProps,\n    deleteItem: () => {\n        const { id } =  stateProps.schedule.item;\n        dispatchProps.deleteItem(id);\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(AddScheduleDialog);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport CalendarBoard from \"./components/CalendarBoard/container\";\nimport rootReducer from \"./redux/rootReducer\";\nimport Navigation from \"./components/Navigation/container\";\n\nimport AddScheduleDialog from \"./components/AddScheduleDialog/container\";\n\nimport DayjsUtils from \"@date-io/dayjs\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport CurrentScheduleDialog from './components/CurrentScheduleDialog/container';\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/en-ca\";\n// import \"dayjs/locale/ja\";\ndayjs.locale(\"en-ca\");\n// dayjs.locale(\"ja\");\n\n// import ErrorSnackbar from \"./components/ErrorSnackbar/container\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\nconst App = () => (\n    <Provider store={store}>\n        <MuiPickersUtilsProvider utils={DayjsUtils}>\n            <Navigation />\n            <CalendarBoard />\n            <AddScheduleDialog />\n            <CurrentScheduleDialog />\n            {/* <ErrorSnackbar /> */}\n        </MuiPickersUtilsProvider>\n    </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}